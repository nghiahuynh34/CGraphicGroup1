#include "func.h"
#include <stdio.h>
#include <stdlib.h>
#include <glut.h>
#include <gl/GL.h>
#include <gl/GLU.h>
#include <GL/gl.h>
#include <math.h>
#include <vector>
#include<windows.h>
#include <iostream>
#include "stb_image.h"

// Insert name: Kieu 
GLubyte rastersK[32] = {
    0x30,   0xF0,
    0x59,   0xC8,
    0x19,   0x80,
    0x19,   0x80,
    0x19,   0x80,
    0x19,   0x80,
    0x19,   0x80,
    0x1B,   0x80,
    0x1F,   0x00,
    0x1C,   0x00,
    0x1E,   0x00,
    0x1B,   0x00,
    0xC9,   0x08,
    0xC9,   0x18,
    0xD9,   0xB0,
    0x70,   0xE0
};
GLubyte rastersI[32] = {
    0x1F,   0x00,
0x23,   0x80,
0x41,   0x80,
0x01,   0x80,
0x01,   0x80,
0x01,   0x80,
0x01,   0x80,
0x01,   0x80,
0x01,   0x80,
0x01,   0x80,
0x01,   0x80,
0x71,   0x80,
0x81,   0x80,
0xC1,   0x80,
0x7F,   0x80

};
GLubyte rastersE[32] = {
    0x3F,   0x00,
0x70,   0x80,
0x60,   0x40,
0x60,   0x00,
0x60,   0x00,
0x60,   0x00,
0x30,   0x00,
0x1F,   0x80,
0x30,   0x00,
0x60,   0x00,
0x60,   0x00,
0x60,   0x00,
0x60,   0x00,
0x60,   0x40,
0x30,   0x80,
0x1F,   0x00



};
GLubyte rastersU[32] = {
    0x07,   0x9C,
0x0C,   0xF2,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0x0C,   0x60,
0xCC,   0x60,
0x8C,   0x60,
0xCC,   0x60,
0x7C,   0x60,

};
GLubyte rastersD[32] = {
    0x00, 0x00,
0x00, 0x00,
0x88, 0x00,
0x50, 0x00,
0x20, 0x00,
0x08, 0x00,
0x04, 0x00,
0x02, 0x00,
0x1A, 0x00,
0x0E, 0x00,
0x04, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00,
0x00, 0x00
};


// Insert name: Nghia
GLubyte rasters[42] = { 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x70,0x40,0x88,0xa0, 0x84,0xa0, 0x94,0xa0, 0x64,0xa0, 0x04,0xa0,0x04,0xa0, 0x05,0x20, 0x05,0x20, 0x25,0x20, 0x45,0x22, 0x45,0x25, 0x25,0x21, 0x1a,0x11, 0x00,0x0e, 0x00,0x00, 0x00,0x00, 0x00,0x00
};
GLubyte rasters2[42] = { 0x01,0xc0, 0x02,0x20, 0x00,0x10, 0x00,0x10,  0x00,0x10, 0x00,0x10, 0x07,0xd0, 0x08,0x30, 0x10,0x10, 0x10,0x38, 0x10,0x00, 0x10,0x00, 0x10,0x00, 0x10,0x08, 0x10,0x08, 0x08,0x10, 0x07,0xe0, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00
};
GLubyte raster3s[42] = {
        0x00, 0x00,
        0x00, 0x00,
        0x00, 0x00,
        0x18, 0x0c,
        0x24, 0x12,
        0x24, 0x12,
        0x14, 0x10,
        0x0c, 0x10,
        0x04, 0x90,
        0x06, 0x90,
        0x05, 0x90,
        0x04, 0xd0,
        0x34, 0xb0,
        0x4c, 0x98,
        0x44, 0x14,
        0x44, 0x12,
        0x3c, 0x12,
        0x00, 0x0c,
        0x00, 0x00,
        0x00, 0x00,
        0x00, 0x00 };
GLubyte raster4s[42] = { 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00,  0x03,0xc0, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x01,0x80, 0x03,0xc0, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00
};
GLubyte raster5s[42] = { 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00,  0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x04,0x60, 0x02,0x90, 0x01,0x08
};
GLubyte raster6s[42] = { 0x00,0x00, 0x00,0x00, 0x00,0x00, 0x60,0x00,  0x90,0x00, 0x08,0x0f, 0x04,0x09, 0x04,0x08, 0x02,0x08, 0x03,0xf8, 0x01,0x08, 0x01,0x08, 0x04,0x88, 0x04,0x88, 0x08,0x88, 0x08,0x48, 0x04,0x48, 0x03,0xa8, 0x00,0x10, 0x00,0x00, 0x00,0x00
};

// Insert name: Hieu
GLubyte hraster[34] = {
    0x30,0x18,0x48,0x24,0x84,0x42,0x44,0x4a,0x25,0x54,0x15,0x4e,0x0d,0x41,0x07,0x40,0x05,
    0xc0,0x45,0x40,0x85,0x40,0x44,0x60,0x24,0x50,0xd4,0x48,0xa4,0x88,0x48,0x58,0x30,0x20
};
GLubyte iraster[34] = {
    0x01,0x80,0x02,0x60,0x04,0x30,0x04,0x10,0x04,0x10,0x02,0x90,0x01,0x50,0x06,0x90,0x08,
    0x10,0x10,0x50,0x00,0x90,0x01,0x10,0x06,0x90,0x09,0x10,0x08,0x10,0x05,0xd0,0x02,0x30
};
GLubyte eraster[50] = {
    0x00,0xc0,0x01,0x20,0x02,0x10,0x04,0x28,0x08,0x50,0x08,0x28,0x05,0x04,0x02,0x82,0x05,
    0x00,0x08,0x00,0x08,0xc0,0x05,0x20,0x32,0x10,0x4c,0x08,0x82,0x10,0x49,0x20,0x30,0xc0,

    0x00,0x00,0x02,0x08,0x01,0x10,0x00,0xa0,
    0x00,0x48,0x00,0x04,0x00,0x2,0x00,0x01
};
GLubyte uraster[36] = {
    0x01,0xd0,0x02,0x28,0x04,0x24,0x04,0x23,0x04,0x26,0x04,0x2a,0x04,0x24,0x04,0x20,0x44,
    0x20,0x84,0x20,0x64,0x20,0x44,0x28,0x84,0x24,0x84,0x22,0x44,0x22,0x24,0x12,0x1c,0x0c
};

void display_Name()
{

    glMatrixMode(GL_PROJECTION);
    glPushMatrix();
    glLoadIdentity();
    gluOrtho2D(0, 800, 0, 800); // Adjust screenWidth and screenHeight accordingly
    glMatrixMode(GL_MODELVIEW);
    glPushMatrix();
    glLoadIdentity();

    glColor3f(1.0, 1.0, 1.0);
    glRasterPos2f(5, 800 - 10); // Adjust position as needed
    glBitmap(16, 16, -28.0, 1.0, 0.0, -16.0, rastersD);
    glBitmap(16, 16, 0.0, 0.0, 15.0, 0.0, rastersK);
    glBitmap(16, 16, 0.0, 0.0, 10.0, 0.0, rastersI);
    glBitmap(16, 16, 0.0, 0.0, 10.0, 0.0, rastersE);
    glBitmap(16, 16, -2.0, 0.0, 35.0, 0.0, rastersU);
    //    hieu
//  glRasterPos2f(5, 800 - 20); // Adjust position as needed
    glBitmap(16, 18, 0.0, 0.0, 18.0, 0.0, hraster);
    glBitmap(16, 18, 0.0, 0.0, 18.0, 0.0, iraster);
    glBitmap(16, 28, 0.0, 0.0, 18.0, 0.0, eraster);
    glBitmap(16, 18, 0.0, 0.0, 35.0, 0.0, uraster);
    //nghia
//     glRasterPos2f(5, 800 - 20); // Adjust position as needed
    glBitmap(16, 21, 0.0, 0.0, 15.0, 0.0, rasters);
    glBitmap(16, 21, 0.0, 0.0, 15.0, 0.0, rasters2);
    glBitmap(16, 21, 0.0, 0.0, 12.0, 0.0, raster3s);
    glBitmap(16, 21, 0.0, 0.0, 0.0, 0.0, raster4s);
    glBitmap(16, 21, 0.0, 0.0, 13.0, 0.0, raster5s);
    glBitmap(16, 21, 0.0, 0.0, 13.0, 0.0, raster6s);

    glPopMatrix();
    glMatrixMode(GL_PROJECTION);
    glPopMatrix();
    glMatrixMode(GL_MODELVIEW);
    glFlush();

}